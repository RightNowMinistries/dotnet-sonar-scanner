name: SonarCloud Scanner (dotnet)
author: RightNow Ministries
description: Runs SonarCloud Static Analysis and Code Coverage for .Net Core Projects
inputs:
  sonar-login:
    description: "Sonar Auth Token"
    required: true
  sonar-project-key:
    description: "SonarCloud Project Key"
    required: true
  sonar-version:
    description: "SonarCloud Version"
    default: "4.6.0" # todo: Change this to a more recent version
  sonar-organization:
    description: "SonarCloud Organization"
    required: true
  sonar-url:
    description: "SonarCloud URL"
    default: "https://sonarcloud.io"
  sonar-exclusions:
    description: "List of files excluded from SonarCloud Static Analysis"
    default: ""
  sonar-code-coverage-exclusions: 
    description: "List of files excluded from SonarCloud Code Coverage Analysis"
    default: ""
  sonar-duplication-exclusions:
    description: "List of files excluded from SonarCloud Duplication Analysis"
    default: ""
  dotnet-version:
    description: "DotNet Version"
    required: true
  dotnet-test-project: 
    description: "Project name for test coverage"
    default: ""
  nuget-source-url:
    description: "URL for Private Nuget Feed"
    default: ""
  nuget-auth-token:
    description: "Auth Token for Private Nuget Feed"
    default: ""
runs: 
  using: composite
  steps:
    - run: echo "Running SonarCloud static analysis for ${{ inputs.sonar-project-key }} using SonarCloud ${{ inputs.sonar-version }}"
      shell: bash

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: temurin

    - name: Setup DotNet
      uses: actions/setup-dotnet@v2
      with: 
        dotnet-version: ${{ inputs.dotnet-version }}
        source-url: ${{ inputs.nuget-source-url }}
      env:
        NUGET_AUTH_TOKEN: ${{ inputs.nuget-auth-token }}
        
    - name: Install Scanner
      run: dotnet tool install --global dotnet-sonarscanner --version ${{ inputs.sonar-version }}
      shell: bash

    - id: scan-pr
      name: Start Pull Request Analysis
      if: ${{ github.event_name == 'pull_request'}}
      run: 'dotnet-sonarscanner begin /key:"${{ inputs.sonar-project-key }}" /o:"${{ inputs.sonar-organization }}" /d:sonar.host.url="${{ inputs.sonar-url }}" /d:sonar.login="${{ inputs.sonar-login }}" /d:sonar.cs.opencover.reportsPaths="${{ inputs.dotnet-test-project }}/coverage.opencover.xml" /d:sonar.exclusions=$SONAR_EXCLUSIONS /d:sonar.coverage.exclusions=$SONAR_CODE_COVERAGE_EXCLUSIONS /d:sonar.cpd.exclusions=$SONAR_CODE_DUPLICATION_EXCLUSIONS'
      shell: bash
      env:
        SONAR_EXCLUSIONS: inputs.sonar-exclusions
        SONAR_CODE_COVERAGE_EXCLUSIONS: inputs.sonar-code-coverage-exclusions
        SONAR_CODE_DUPLICATION_EXCLUSIONS: inputs.sonar-duplication-exclusions

    - id: scan-branch
      name: Start Branch Analysis
      if: ${{ github.event_name == 'push'}}
      run: 'dotnet-sonarscanner begin /key:"${{ inputs.sonar-project-key }}" /o:"${{ inputs.sonar-organization }}" /d:sonar.host.url="${{ inputs.sonar-url }}" /d:sonar.login="${{ inputs.sonar-login }}" /d:sonar.cs.opencover.reportsPaths="${{ inputs.dotnet-test-project }}/coverage.opencover.xml" /d:sonar.exclusions=$SONAR_EXCLUSIONS /d:sonar.coverage.exclusions=$SONAR_CODE_COVERAGE_EXCLUSIONS /d:sonar.cpd.exclusions=$SONAR_CODE_DUPLICATION_EXCLUSIONS /d:sonar.branch.name="${{ github.ref_name }}"'
      shell: bash
      env:
        SONAR_EXCLUSIONS: inputs.sonar-exclusions
        SONAR_CODE_COVERAGE_EXCLUSIONS: inputs.sonar-code-coverage-exclusions
        SONAR_CODE_DUPLICATION_EXCLUSIONS: inputs.sonar-duplication-exclusions

    - id: build
      name: DotNet Build
      run: 'dotnet build'
      shell: bash

    - id: test
      name: DotNet Test
      run: 'dotnet test --no-build --no-restore ${{ inputs.dotnet-test-project }} /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'
      shell: bash

    - name: Complete Analysis
      run: 'dotnet-sonarscanner end /d:sonar.login=${{ inputs.sonar-login }}'
      shell: bash