name: SonarCloud Scanner (dotnet)
author: RightNow Ministries
description: Runs SonarCloud Static Analysis and Code Coverage for .Net Core Projects
inputs:
  sonarLogin:
    description: "Sonar Auth Token"
    required: true
  sonarProjectKey:
    description: "SonarCloud Project Key"
    required: true
  sonarVersion:
    description: "SonarCloud Version"
    default: "4.6.0" # todo: Change this to a more recent version
  sonarOrganization:
    description: "SonarCloud Organization"
    required: true
  sonarUrl:
    description: "SonarCloud URL"
    default: "https://sonarcloud.io"
  sonarExclusions:
    description: "List of files excluded from SonarCloud Static Analysis"
    default: ''
  sonarCodeCoverageExclusions: 
    description: "List of files excluded from SonarCloud Code Coverage Analysis"
    default: ''
  sonarDuplicationExclusions:
    description: "List of files excluded from SonarCloud Duplication Analysis"
    default: ''
  dotnetVersion:
    description: "DotNet Version"
    required: true
  dotnetTestProject: 
    description: "Project name for test coverage"
    default: ''
runs: 
  using: composite
  steps:
    - run: echo "Running SonarCloud static analysis for ${{ inputs.sonarProjectKey }} using SonarCloud ${{ sonarVersion }}"
      shell: bash

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        java-version: 11
        distribution: temurin

    - name: Setup DotNet
      uses: actions/setup-dotnet@v2
      with: 
        dotnet-version: ${{ inputs.dotnetVersion }}
        
    - name: Install Scanner
      run: dotnet tool install --global dotnet-sonarscanner --version ${{ inputs.sonarVersion }}
      shell: bash

    - name: Start Pull Request Analysis
      # if: ${{ github.event_name == 'pull_request' }}
      run: 'dotnet-sonarscanner begin /key:"${{ inputs.sonarKey }}" /o:"${{ inputs.sonarOrganization }}" /d:sonar.host.url="${{ inputs.sonarUrl }}" /d:sonar.login="${{ inputs.sonarLogin }}" /d:sonar.cs.opencover.reportsPaths="${{ inputs.dotnetTestProject }}/coverage.opencover.xml" /d:sonar.exclusions="${{ inputs.sonarExclusions }}" /d:sonar.coverage.exclusions="${{ inputs.sonarCoverageExclusions }}" /d:sonar.cpd.exclusions="${{ inputs.sonarDuplicationExclusions }}"'
      shell: bash

    - name: DotNet Build
      run: 'dotnet build'
      shell: bash

    - name: DotNet Test
      run: 'dotnet test --no-build --no-restore ${{ inputs.dotnetTestProject }} /p:CollectCoverage=true /p:CoverletOutputFormat:opencover'
      shell: bash

    - name: Complete Analysis
      run: 'dotnet-sonarscanner end /d:sonar.login=${{ inputs.sonarLogin }}'
      shell: bash